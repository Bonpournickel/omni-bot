# $LastChangedBy$
# $LastChangedDate$
# $LastChangedRevision$

# Root jam file for Omni-bot.

import modules ;

BOOST = [ modules.peek : BOOST ] ; 
BOOST_LIB = [ modules.peek : BOOST_LIB ] ; 
BOOST_SUFFIX = [ modules.peek : BOOST_SUFFIX ] ; 

# define requirements common to all subprojects
project Omnibot
	: build-dir ./build
	: requirements 
	 <include>$(BOOST)
	 <include>dependencies/iprof
	 <include>dependencies/wildmagic
	 <include>dependencies/gmsrc_ex/src/3rdParty
	 <include>dependencies/gmsrc_ex/src/platform/win32gcc
	 <include>dependencies/gmsrc_ex/src/gm
	 <include>dependencies/gmsrc_ex/src/binds
	 <include>dependencies/gmsrc_ex/src/3rdParty/gmbinder2
	 <toolset>msvc:<include>dependencies/gmsrc_ex/src/platform/win32msvc
	 <toolset>gcc:<include>dependencies/gmsrc_ex/src/platform/win32gcc
	 <toolset>darwin:<include>dependencies/gmsrc_ex/src/platform/osx
	 <toolset>msvc:<define>WIN32
	 <toolset>gcc:<define>__linux__
	 <toolset>darwin:<define>__osx__
	 <variant>debug:<define>_DEBUG
	 <variant>release:<define>NDEBUG
	 <address-model>64:<cflags>-fPIC
  <address-model>64:<cflags>-Wl,-rpath=/usr/lib64 <cflags>-Wl,--format=elf64-x86-64
  <address-model>32:<cflags>-fPIC <cflags>-Wl,--format=elf32-i386
  <address-model>32:<cflags>-Wl,-rpath=/usr/lib
	;

# define external libs
lib boost_filesystem : : <variant>release <file>$(BOOST_LIB)/libboost_filesystem$(BOOST_SUFFIX).so ;
lib boost_regex : : <variant>release <file>$(BOOST_LIB)/libboost_regex$(BOOST_SUFFIX).so ;
lib boost_date_time : : <variant>release <file>$(BOOST_LIB)/libboost_date_time$(BOOST_SUFFIX).so ;
lib boost_system : : <variant>release <file>$(BOOST_LIB)/libboost_system$(BOOST_SUFFIX).so ;

# define aliases for convenience and to force static linking
alias boost_fs : boost_filesystem : <link>shared ;
alias boost_regx : boost_regex : <link>shared ;
alias boost_dt : boost_date_time : <link>shared ;
alias boost_sys : boost_system : <link>shared ;

# target suffix
rule tag ( name : type ? : property-set )
{
	if $(type) = SHARED_LIB
	{
		if [ $(property-set).get <address-model> ] = 64
		{
			return $(name).x86_64.so ;
		}
		else
		{
			return $(name).so ;
		}
	}
}


build-project Common ; 
#build-project MC ;
build-project ET ;
#build-project RTCW ; 
#build-project TeamFortressLib ; 
#build-project FF ; 
#build-project D3 ; 
#build-project Q4 ; 
#build-project HL2DM ; 
#build-project SKELETON ; 


// New module format
global Util = import("utilities");
global RTCWUtil = import("rtcw_utilities");

// Load any other scripts that we will need.
ExecScript( "rtcw_navconfig.gm" );
ExecScript( "commands.gm" );
ExecScript( "rtcw_commands.gm" );
ExecScript( "server_manager.gm" );
ExecScript( "rtcw_botnames.gm" );

//sysSetDesiredMemoryUsageHard(5);
//yield();
//print("desired hard mem " + sysGetDesiredMemoryUsageHard());

global RegionTrigger = import("rtcw_regiontriggers");
global ClassManager = import("rtcw_classmanager");

// global debug flags
global DEBUG_MAP_SCRIPTS = false;
global DEBUG_GOAL_AVAILABILITY = false;

global DEBUG_SCRIPT_GOALS = false;
global DEBUG_SCRIPT_GOALS_FILTER = {};
DEBUG_SCRIPT_GOALS_FILTER["pathfailed"] = 1;
DEBUG_SCRIPT_GOALS_FILTER["timedout"] = 1;
DEBUG_SCRIPT_GOALS_FILTER["disabled"] = 1;
DEBUG_SCRIPT_GOALS_FILTER["regiontrigger"] = 1;
DEBUG_SCRIPT_GOALS_FILTER["initialized"] = 1;

// global flag to turn off bot chat in supported maps
global MAP_TALK = true;

global MAP_SUICIDE = false; // kill out for charge, etc

global DisableClassManager = false;

// set up the class counts
Util.InitializeClassTables();
countAxis = Server.MinClassCount[TEAM.AXIS];
countAxis[CLASS.SOLDIER] = 1;
countAxis[CLASS.MEDIC] = 2;
countAxis[CLASS.ENGINEER] = 1;
countAxis[CLASS.LIEUTENANT] = 2;

countAllies = Server.MinClassCount[TEAM.ALLIES];
countAllies[CLASS.SOLDIER] = 1;
countAllies[CLASS.MEDIC] = 2;
countAllies[CLASS.ENGINEER] = 1;
countAllies[CLASS.LIEUTENANT] = 2;


global PostMapLoad = function()
{
	OnTrigger("Round End.", RoundEnd);
	Util.ProcessMovers();

	if ( Map.SnipeMap ) {
		Util.SnipeMap();
	} else if ( Map.Classes )   {
		Map.Classes();
	}
};

global RoundEnd = function(trigger)
{
	winner = ToInt(trigger.Action);
	if ( winner == TEAM.AXIS ) {
		loser = TEAM.ALLIES;
	}
	else {
		loser = TEAM.AXIS;
	}

	RTCWUtil.WinningChat(winner);
	RTCWUtil.LosingChat(loser);
};

print( "RTCW autoexec script Executed" );
